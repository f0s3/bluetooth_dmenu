#!/bin/bash

get_connected_device() {
    result=""
    info=$(bluetoothctl info)
    if [[ $info != "Missing device address argument" ]]; then
        result=$(bluetoothctl info |
            awk '/Device/{print $2} /Name/{print $2}' |
            awk -v RS=  '{$1=$1}1 {print $2" "$1}')
        echo "$result (Connected)"
    fi
}

get_paired_devices() {
    IFS=
    result=$(bluetoothctl paired-devices |
        awk '{first = $1; $1 = ""; print $0, first; }' |
        awk '{$NF=""; print $0}' |
        awk '{first=$1; $1= ""; print $0, first;}' |
        sed -e 's/^[ \t]*//' |
        awk '{print $0" (Paired)"}')
    echo $result
}

# implement devices scan option
get_scan_results() {
    echo "123"
}

get_main_menu() {
    connected_device=get_connected_device

    get_connected_device
    get_paired_devices
}

selected_item=$(get_main_menu | dmenu -l 10)
IFS=

if [[ $selected_item == *\(Connected\) ]]; then
    connected_device_mac=$(echo $selected_item | awk '{print $(NF-1)}')
    connected_execution_result=$(bluetoothctl disconnect $connected_device_mac)
    $(echo $connected_execution_result | awk '/Successful/' | dmenu -l 1 > /dev/null)
else
    paired_device_mac=$(echo $selected_item | awk '{print $(NF-1)}')
    paired_execution_result=$(bluetoothctl connect $paired_device_mac)
    $(echo $paired_execution_result | awk '/Failed*|Connection successful/' | dmenu -l 1 > /dev/null)
fi

